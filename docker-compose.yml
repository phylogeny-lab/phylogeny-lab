version: '3.9'
services:

  nextjs:
    container_name: nextjs
    build: 
      context: phylogeny-lab
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - bridged_net_adapter

  postgres:
    container_name: postgresql
    build: 
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bridged_net_adapter

  fastapi:
    container_name: fastapi
    build:
      context: ./Backend
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_URL=postgresql+asyncpg://admin:password@postgres/postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/code/app/worker
      - SHARED_VOLUME=/volume
      - BLAST_SAVE_DIR=/volume/blast_queries
      - ALIGNMENTS_SAVE_DIR=/volume/alignments
    volumes:
      - shared_web_worker:/volume
      - ./Backend/app/data:/data
    depends_on:
      - postgres
    networks:
      - bridged_net_adapter

  worker:
    container_name: worker
    restart: always
    build:
      context: ./Backend/app/worker
      dockerfile: worker.Dockerfile
    command: celery -A worker.celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./Backend/app/worker/logs/celery.log:/code/worker/logs/celery.log
      - shared_web_worker:/volume
    environment:
      - BLAST_SAVE_DIR=/volume/blast_queries
      - API_ENDPOINT=http://fastapi:5000/api
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_URL=postgresql+asyncpg://admin:password@postgres/postgres
    depends_on:
      - redis
      - fastapi
    networks:
      - bridged_net_adapter

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - bridged_net_adapter

  flower:
    container_name: flower
    build: 
      context: ./Backend/app/worker
      dockerfile: flower.Dockerfile
    command: ./start-flower.sh
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_UNAUTHENTICATED_API=true
    volumes:
      - flower_data:/data
    depends_on:
      - fastapi
      - redis
      - worker
    networks:
      - bridged_net_adapter

networks:
  bridged_net_adapter:
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.50.0/24

volumes:
  shared_web_worker:
  flower_data:
  redis_data:
  postgres_data: